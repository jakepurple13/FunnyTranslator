include:
  - project: 'gabbwireless/infrastructure/pipeline-components'
    file:
      - 'components/android/android-handheld-dev-pipeline-auto-versioning.yml'

build-debug-auto-versioning:
  variables:
    KEYSTORE_PATH: .secure_files/gabb.keystore
    SECURE_FILES_DOWNLOAD_PATH: app/.secure_files
  stage: build
  image: alvrme/alpine-android:android-34-jdk21
  tags: [ ]
build-release-auto-versioning:
  variables:
    KEYSTORE_PATH: .secure_files/gabb.keystore
    SECURE_FILES_DOWNLOAD_PATH: app/.secure_files
  stage: build
  image: alvrme/alpine-android:android-34-jdk21
  tags: [ ]

deploy-dev-store:
  script:
    - echo $GOOGLE_APPLICATION_CREDENTIALS_ENCODED | base64 --decode > credentials.json
    - GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/credentials.json
    - gcloud auth activate-service-account --key-file $GOOGLE_APPLICATION_CREDENTIALS
    - GOOGLE_TOKEN=$(gcloud auth print-identity-token --audiences=$AUDIENCE)
    - DATA=$(echo "{\"token_id\":\"${GOOGLE_TOKEN}\"}")
    - JSON=$(curl -v -s --fail-with-body -X POST $ENVIRONMENT_URL/user/authenticate
      -H "Content-Type:application/json" -d ${DATA})
    - STORE_TOKEN=$(echo $JSON | grep -o '"token":"[^"]*' | grep -o '[^"]*$')
    - echo "app/build/outputs/apk/${FILE_OUTPUT_LOCATION}"
    - ls -lah app/build/outputs/apk || true
    - ls -lah app/build/outputs/apk/default/release
    - ls -lah app/build/outputs/apk/default/debug
    - curl --fail-with-body -v -X POST $ENVIRONMENT_URL/apk/upload --header "Authorization:Bearer
      ${STORE_TOKEN}" -F "file=@app/build/outputs/apk/${FILE_OUTPUT_LOCATION}" -F "resign=false"